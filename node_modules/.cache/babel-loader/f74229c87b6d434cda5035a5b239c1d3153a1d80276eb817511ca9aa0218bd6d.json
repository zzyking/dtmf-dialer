{"ast":null,"code":"export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = nativeAudioScheduledSourceNode => {\n  nativeAudioScheduledSourceNode.start = (start => {\n    return (when = 0, offset = 0, duration) => {\n      if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {\n        throw new RangeError(\"The parameters can't be negative.\");\n      }\n      // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n      start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n    };\n  })(nativeAudioScheduledSourceNode.start);\n};","map":{"version":3,"names":["wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","start","when","offset","duration","RangeError","call"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/standardized-audio-context/src/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.ts"],"sourcesContent":["import { TNativeAudioBufferSourceNode, TNativeConstantSourceNode, TNativeOscillatorNode } from '../types';\n\nexport const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (\n    nativeAudioScheduledSourceNode: TNativeAudioBufferSourceNode | TNativeConstantSourceNode | TNativeOscillatorNode\n): void => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration?: number) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            (<(when: number, offset: number, duration?: number) => void>start).call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n"],"mappings":"AAEA,OAAO,MAAMA,yDAAyD,GAClEC,8BAAgH,IAC1G;EACNA,8BAA8B,CAACC,KAAK,GAAG,CAAEA,KAAK,IAAI;IAC9C,OAAO,CAACC,IAAI,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAEC,QAAiB,KAAI;MAC/C,IAAK,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,GAAG,CAAC,IAAKD,MAAM,GAAG,CAAC,IAAID,IAAI,GAAG,CAAC,EAAE;QAC1E,MAAM,IAAIG,UAAU,CAAC,mCAAmC,CAAC;MAC7D;MAEA;MAC4DJ,KAAM,CAACK,IAAI,CAACN,8BAA8B,EAAEE,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;IACnI,CAAC;EACL,CAAC,EAAEJ,8BAA8B,CAACC,KAAK,CAAC;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}