{"ast":null,"code":"import { Effect } from \"./Effect.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { LFO } from \"../source/oscillator/LFO.js\";\nimport { Delay } from \"../core/context/Delay.js\";\nimport { readOnly } from \"../core/util/Interface.js\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect {\n  constructor() {\n    const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    super(options);\n    this.name = \"Vibrato\";\n    this._delayNode = new Delay({\n      context: this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    this._lfo = new LFO({\n      context: this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n    }).start().connect(this._delayNode.delayTime);\n    this.frequency = this._lfo.frequency;\n    this.depth = this._lfo.amplitude;\n    this.depth.value = options.depth;\n    readOnly(this, [\"frequency\", \"depth\"]);\n    this.effectSend.chain(this._delayNode, this.effectReturn);\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n  }\n  /**\n   * Type of oscillator attached to the Vibrato.\n   */\n  get type() {\n    return this._lfo.type;\n  }\n  set type(type) {\n    this._lfo.type = type;\n  }\n  dispose() {\n    super.dispose();\n    this._delayNode.dispose();\n    this._lfo.dispose();\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Effect","optionsFromArguments","LFO","Delay","readOnly","Vibrato","constructor","options","getDefaults","arguments","name","_delayNode","context","delayTime","maxDelay","_lfo","type","min","max","frequency","phase","start","connect","depth","amplitude","value","effectSend","chain","effectReturn","Object","assign","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/effect/Vibrato.ts"],"sourcesContent":["import { Effect, EffectOptions } from \"./Effect.js\";\nimport { ToneOscillatorType } from \"../source/oscillator/OscillatorInterface.js\";\nimport { Frequency, NormalRange, Seconds } from \"../core/type/Units.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { LFO } from \"../source/oscillator/LFO.js\";\nimport { Delay } from \"../core/context/Delay.js\";\nimport { Signal } from \"../signal/Signal.js\";\nimport { Param } from \"../core/context/Param.js\";\nimport { readOnly } from \"../core/util/Interface.js\";\n\nexport interface VibratoOptions extends EffectOptions {\n\tmaxDelay: Seconds;\n\tfrequency: Frequency;\n\tdepth: NormalRange;\n\ttype: ToneOscillatorType;\n}\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect<VibratoOptions> {\n\treadonly name: string = \"Vibrato\";\n\t/**\n\t * The delay node used for the vibrato effect\n\t */\n\tprivate _delayNode: Delay;\n\n\t/**\n\t * The LFO used to control the vibrato\n\t */\n\tprivate _lfo: LFO;\n\n\t/**\n\t * The frequency of the vibrato\n\t */\n\treadonly frequency: Signal<\"frequency\">;\n\n\t/**\n\t * The depth of the vibrato.\n\t */\n\treadonly depth: Param<\"normalRange\">;\n\n\t/**\n\t * @param frequency The frequency of the vibrato.\n\t * @param depth The amount the pitch is modulated.\n\t */\n\tconstructor(frequency?: Frequency, depth?: NormalRange);\n\tconstructor(options?: Partial<VibratoOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\n\t\t\t\"frequency\",\n\t\t\t\"depth\",\n\t\t]);\n\t\tsuper(options);\n\n\t\tthis._delayNode = new Delay({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: 0,\n\t\t\tmaxDelay: options.maxDelay,\n\t\t});\n\t\tthis._lfo = new LFO({\n\t\t\tcontext: this.context,\n\t\t\ttype: options.type,\n\t\t\tmin: 0,\n\t\t\tmax: options.maxDelay,\n\t\t\tfrequency: options.frequency,\n\t\t\tphase: -90, // offse the phase so the resting position is in the center\n\t\t})\n\t\t\t.start()\n\t\t\t.connect(this._delayNode.delayTime);\n\t\tthis.frequency = this._lfo.frequency;\n\t\tthis.depth = this._lfo.amplitude;\n\n\t\tthis.depth.value = options.depth;\n\t\treadOnly(this, [\"frequency\", \"depth\"]);\n\t\tthis.effectSend.chain(this._delayNode, this.effectReturn);\n\t}\n\n\tstatic getDefaults(): VibratoOptions {\n\t\treturn Object.assign(Effect.getDefaults(), {\n\t\t\tmaxDelay: 0.005,\n\t\t\tfrequency: 5,\n\t\t\tdepth: 0.1,\n\t\t\ttype: \"sine\" as const,\n\t\t});\n\t}\n\n\t/**\n\t * Type of oscillator attached to the Vibrato.\n\t */\n\tget type(): ToneOscillatorType {\n\t\treturn this._lfo.type;\n\t}\n\tset type(type) {\n\t\tthis._lfo.type = type;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._delayNode.dispose();\n\t\tthis._lfo.dispose();\n\t\tthis.frequency.dispose();\n\t\tthis.depth.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAuB,aAAa;AAGnD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,GAAG,QAAQ,6BAA6B;AACjD,SAASC,KAAK,QAAQ,0BAA0B;AAGhD,SAASC,QAAQ,QAAQ,2BAA2B;AAQpD;;;;;AAKA,OAAM,MAAOC,OAAQ,SAAQL,MAAsB;EA4BlDM,YAAA;IACC,MAAMC,OAAO,GAAGN,oBAAoB,CAACI,OAAO,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CACtE,WAAW,EACX,OAAO,CACP,CAAC;IACF,KAAK,CAACF,OAAO,CAAC;IAhCN,KAAAG,IAAI,GAAW,SAAS;IAkChC,IAAI,CAACC,UAAU,GAAG,IAAIR,KAAK,CAAC;MAC3BS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAEP,OAAO,CAACO;KAClB,CAAC;IACF,IAAI,CAACC,IAAI,GAAG,IAAIb,GAAG,CAAC;MACnBU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,IAAI,EAAET,OAAO,CAACS,IAAI;MAClBC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAEX,OAAO,CAACO,QAAQ;MACrBK,SAAS,EAAEZ,OAAO,CAACY,SAAS;MAC5BC,KAAK,EAAE,CAAC,EAAE,CAAE;KACZ,CAAC,CACAC,KAAK,EAAE,CACPC,OAAO,CAAC,IAAI,CAACX,UAAU,CAACE,SAAS,CAAC;IACpC,IAAI,CAACM,SAAS,GAAG,IAAI,CAACJ,IAAI,CAACI,SAAS;IACpC,IAAI,CAACI,KAAK,GAAG,IAAI,CAACR,IAAI,CAACS,SAAS;IAEhC,IAAI,CAACD,KAAK,CAACE,KAAK,GAAGlB,OAAO,CAACgB,KAAK;IAChCnB,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,CAACsB,UAAU,CAACC,KAAK,CAAC,IAAI,CAAChB,UAAU,EAAE,IAAI,CAACiB,YAAY,CAAC;EAC1D;EAEA,OAAOpB,WAAWA,CAAA;IACjB,OAAOqB,MAAM,CAACC,MAAM,CAAC9B,MAAM,CAACQ,WAAW,EAAE,EAAE;MAC1CM,QAAQ,EAAE,KAAK;MACfK,SAAS,EAAE,CAAC;MACZI,KAAK,EAAE,GAAG;MACVP,IAAI,EAAE;KACN,CAAC;EACH;EAEA;;;EAGA,IAAIA,IAAIA,CAAA;IACP,OAAO,IAAI,CAACD,IAAI,CAACC,IAAI;EACtB;EACA,IAAIA,IAAIA,CAACA,IAAI;IACZ,IAAI,CAACD,IAAI,CAACC,IAAI,GAAGA,IAAI;EACtB;EAEAe,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACpB,UAAU,CAACoB,OAAO,EAAE;IACzB,IAAI,CAAChB,IAAI,CAACgB,OAAO,EAAE;IACnB,IAAI,CAACZ,SAAS,CAACY,OAAO,EAAE;IACxB,IAAI,CAACR,KAAK,CAACQ,OAAO,EAAE;IACpB,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}