{"ast":null,"code":"import { readOnly } from \"../../core/util/Interface.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { Panner } from \"./Panner.js\";\nimport { Volume } from \"./Volume.js\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n  constructor() {\n    const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n    super(options);\n    this.name = \"PanVol\";\n    this._panner = this.input = new Panner({\n      context: this.context,\n      pan: options.pan,\n      channelCount: options.channelCount\n    });\n    this.pan = this._panner.pan;\n    this._volume = this.output = new Volume({\n      context: this.context,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    // connections\n    this._panner.connect(this._volume);\n    this.mute = options.mute;\n    readOnly(this, [\"pan\", \"volume\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mute: false,\n      pan: 0,\n      volume: 0,\n      channelCount: 1\n    });\n  }\n  /**\n   * Mute/unmute the volume\n   */\n  get mute() {\n    return this._volume.mute;\n  }\n  set mute(mute) {\n    this._volume.mute = mute;\n  }\n  dispose() {\n    super.dispose();\n    this._panner.dispose();\n    this.pan.dispose();\n    this._volume.dispose();\n    this.volume.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["readOnly","ToneAudioNode","optionsFromArguments","Panner","Volume","PanVol","constructor","options","getDefaults","arguments","name","_panner","input","context","pan","channelCount","_volume","output","volume","connect","mute","Object","assign","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/component/channel/PanVol.ts"],"sourcesContent":["import { readOnly } from \"../../core/util/Interface.js\";\nimport { Param } from \"../../core/context/Param.js\";\nimport {\n\tInputNode,\n\tOutputNode,\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../../core/context/ToneAudioNode.js\";\nimport { AudioRange, Decibels } from \"../../core/type/Units.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { Panner } from \"./Panner.js\";\nimport { Volume } from \"./Volume.js\";\n\nexport interface PanVolOptions extends ToneAudioNodeOptions {\n\tpan: AudioRange;\n\tvolume: Decibels;\n\tmute: boolean;\n\tchannelCount: number;\n}\n\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode<PanVolOptions> {\n\treadonly name: string = \"PanVol\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * The panning node\n\t */\n\tprivate _panner: Panner;\n\n\t/**\n\t * The L/R panning control. -1 = hard left, 1 = hard right.\n\t * @min -1\n\t * @max 1\n\t */\n\treadonly pan: Param<\"audioRange\">;\n\n\t/**\n\t * The volume node\n\t */\n\tprivate _volume: Volume;\n\n\t/**\n\t * The volume control in decibels.\n\t */\n\treadonly volume: Param<\"decibels\">;\n\n\t/**\n\t * @param pan the initial pan\n\t * @param volume The output volume.\n\t */\n\tconstructor(pan?: AudioRange, volume?: Decibels);\n\tconstructor(options?: Partial<PanVolOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(PanVol.getDefaults(), arguments, [\n\t\t\t\"pan\",\n\t\t\t\"volume\",\n\t\t]);\n\t\tsuper(options);\n\n\t\tthis._panner = this.input = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tpan: options.pan,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\tthis.pan = this._panner.pan;\n\t\tthis._volume = this.output = new Volume({\n\t\t\tcontext: this.context,\n\t\t\tvolume: options.volume,\n\t\t});\n\t\tthis.volume = this._volume.volume;\n\n\t\t// connections\n\t\tthis._panner.connect(this._volume);\n\t\tthis.mute = options.mute;\n\n\t\treadOnly(this, [\"pan\", \"volume\"]);\n\t}\n\n\tstatic getDefaults(): PanVolOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmute: false,\n\t\t\tpan: 0,\n\t\t\tvolume: 0,\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\t/**\n\t * Mute/unmute the volume\n\t */\n\tget mute(): boolean {\n\t\treturn this._volume.mute;\n\t}\n\tset mute(mute) {\n\t\tthis._volume.mute = mute;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\tthis.pan.dispose();\n\t\tthis._volume.dispose();\n\t\tthis.volume.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,8BAA8B;AAEvD,SAGCC,aAAa,QAEP,qCAAqC;AAE5C,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,MAAM,QAAQ,aAAa;AASpC;;;;;;;;AAQA,OAAM,MAAOC,MAAO,SAAQJ,aAA4B;EAkCvDK,YAAA;IACC,MAAMC,OAAO,GAAGL,oBAAoB,CAACG,MAAM,CAACG,WAAW,EAAE,EAAEC,SAAS,EAAE,CACrE,KAAK,EACL,QAAQ,CACR,CAAC;IACF,KAAK,CAACF,OAAO,CAAC;IAtCN,KAAAG,IAAI,GAAW,QAAQ;IAwC/B,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,KAAK,GAAG,IAAIT,MAAM,CAAC;MACtCU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,GAAG,EAAEP,OAAO,CAACO,GAAG;MAChBC,YAAY,EAAER,OAAO,CAACQ;KACtB,CAAC;IACF,IAAI,CAACD,GAAG,GAAG,IAAI,CAACH,OAAO,CAACG,GAAG;IAC3B,IAAI,CAACE,OAAO,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIb,MAAM,CAAC;MACvCS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,MAAM,EAAEX,OAAO,CAACW;KAChB,CAAC;IACF,IAAI,CAACA,MAAM,GAAG,IAAI,CAACF,OAAO,CAACE,MAAM;IAEjC;IACA,IAAI,CAACP,OAAO,CAACQ,OAAO,CAAC,IAAI,CAACH,OAAO,CAAC;IAClC,IAAI,CAACI,IAAI,GAAGb,OAAO,CAACa,IAAI;IAExBpB,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EAClC;EAEA,OAAOQ,WAAWA,CAAA;IACjB,OAAOa,MAAM,CAACC,MAAM,CAACrB,aAAa,CAACO,WAAW,EAAE,EAAE;MACjDY,IAAI,EAAE,KAAK;MACXN,GAAG,EAAE,CAAC;MACNI,MAAM,EAAE,CAAC;MACTH,YAAY,EAAE;KACd,CAAC;EACH;EAEA;;;EAGA,IAAIK,IAAIA,CAAA;IACP,OAAO,IAAI,CAACJ,OAAO,CAACI,IAAI;EACzB;EACA,IAAIA,IAAIA,CAACA,IAAI;IACZ,IAAI,CAACJ,OAAO,CAACI,IAAI,GAAGA,IAAI;EACzB;EAEAG,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACZ,OAAO,CAACY,OAAO,EAAE;IACtB,IAAI,CAACT,GAAG,CAACS,OAAO,EAAE;IAClB,IAAI,CAACP,OAAO,CAACO,OAAO,EAAE;IACtB,IAAI,CAACL,MAAM,CAACK,OAAO,EAAE;IACrB,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}