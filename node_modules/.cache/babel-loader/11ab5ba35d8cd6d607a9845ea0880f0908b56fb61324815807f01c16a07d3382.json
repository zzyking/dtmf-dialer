{"ast":null,"code":"export const cloneAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  return new Promise((resolve, reject) => {\n    const {\n      port1,\n      port2\n    } = new MessageChannel();\n    port1.onmessage = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n    port1.onmessageerror = ({\n      data\n    }) => {\n      port1.close();\n      port2.close();\n      reject(data);\n    };\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","map":{"version":3,"names":["cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","Promise","resolve","reject","port1","port2","MessageChannel","onmessage","data","close","onmessageerror","postMessage"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/standardized-audio-context/src/helpers/clone-audio-worklet-node-options.ts"],"sourcesContent":["import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n"],"mappings":"AAEA,OAAO,MAAMA,4BAA4B,GAAIC,uBAAiD,IAAuC;EACjI,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACnC,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAE,GAAG,IAAIC,cAAc,EAAE;IAE7CF,KAAK,CAACG,SAAS,GAAG,CAAC;MAAEC;IAAI,CAAE,KAAI;MAC3BJ,KAAK,CAACK,KAAK,EAAE;MACbJ,KAAK,CAACI,KAAK,EAAE;MAEbP,OAAO,CAACM,IAAI,CAAC;IACjB,CAAC;IACDJ,KAAK,CAACM,cAAc,GAAG,CAAC;MAAEF;IAAI,CAAE,KAAI;MAChCJ,KAAK,CAACK,KAAK,EAAE;MACbJ,KAAK,CAACI,KAAK,EAAE;MAEbN,MAAM,CAACK,IAAI,CAAC;IAChB,CAAC;IAED;IACAH,KAAK,CAACM,WAAW,CAACX,uBAAuB,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}