{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode.js\";\nimport { Compressor } from \"./Compressor.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { MidSideSplit } from \"../channel/MidSideSplit.js\";\nimport { MidSideMerge } from \"../channel/MidSideMerge.js\";\nimport { readOnly } from \"../../core/util/Interface.js\";\n/**\n * MidSideCompressor applies two different compressors to the {@link mid}\n * and {@link side} signal components of the input.\n * @see {@link MidSideSplit} and {@link MidSideMerge}.\n * @category Component\n */\nexport class MidSideCompressor extends ToneAudioNode {\n  constructor() {\n    const options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n    super(options);\n    this.name = \"MidSideCompressor\";\n    this._midSideSplit = this.input = new MidSideSplit({\n      context: this.context\n    });\n    this._midSideMerge = this.output = new MidSideMerge({\n      context: this.context\n    });\n    this.mid = new Compressor(Object.assign(options.mid, {\n      context: this.context\n    }));\n    this.side = new Compressor(Object.assign(options.side, {\n      context: this.context\n    }));\n    this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n    this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n    readOnly(this, [\"mid\", \"side\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      side: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      }\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.mid.dispose();\n    this.side.dispose();\n    this._midSideSplit.dispose();\n    this._midSideMerge.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","Compressor","optionsFromArguments","MidSideSplit","MidSideMerge","readOnly","MidSideCompressor","constructor","options","getDefaults","arguments","name","_midSideSplit","input","context","_midSideMerge","output","mid","Object","assign","side","chain","ratio","threshold","release","attack","knee","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/component/dynamics/MidSideCompressor.ts"],"sourcesContent":["import {\n\tInputNode,\n\tOutputNode,\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../../core/context/ToneAudioNode.js\";\nimport { Compressor, CompressorOptions } from \"./Compressor.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { MidSideSplit } from \"../channel/MidSideSplit.js\";\nimport { MidSideMerge } from \"../channel/MidSideMerge.js\";\nimport { readOnly, RecursivePartial } from \"../../core/util/Interface.js\";\n\nexport interface MidSideCompressorOptions extends ToneAudioNodeOptions {\n\tmid: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n\tside: Omit<CompressorOptions, keyof ToneAudioNodeOptions>;\n}\n\n/**\n * MidSideCompressor applies two different compressors to the {@link mid}\n * and {@link side} signal components of the input.\n * @see {@link MidSideSplit} and {@link MidSideMerge}.\n * @category Component\n */\nexport class MidSideCompressor extends ToneAudioNode<MidSideCompressorOptions> {\n\treadonly name: string = \"MidSideCompressor\";\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * Split the incoming signal into Mid/Side\n\t */\n\tprivate _midSideSplit: MidSideSplit;\n\n\t/**\n\t * Merge the compressed signal back into a single stream\n\t */\n\tprivate _midSideMerge: MidSideMerge;\n\n\t/**\n\t * The compression applied to the mid signal\n\t */\n\treadonly mid: Compressor;\n\n\t/**\n\t * The compression applied to the side signal\n\t */\n\treadonly side: Compressor;\n\n\tconstructor(options?: RecursivePartial<MidSideCompressorOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(\n\t\t\tMidSideCompressor.getDefaults(),\n\t\t\targuments\n\t\t);\n\t\tsuper(options);\n\n\t\tthis._midSideSplit = this.input = new MidSideSplit({\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis._midSideMerge = this.output = new MidSideMerge({\n\t\t\tcontext: this.context,\n\t\t});\n\t\tthis.mid = new Compressor(\n\t\t\tObject.assign(options.mid, { context: this.context })\n\t\t);\n\t\tthis.side = new Compressor(\n\t\t\tObject.assign(options.side, { context: this.context })\n\t\t);\n\n\t\tthis._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n\t\tthis._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n\t\treadOnly(this, [\"mid\", \"side\"]);\n\t}\n\n\tstatic getDefaults(): MidSideCompressorOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tmid: {\n\t\t\t\tratio: 3,\n\t\t\t\tthreshold: -24,\n\t\t\t\trelease: 0.03,\n\t\t\t\tattack: 0.02,\n\t\t\t\tknee: 16,\n\t\t\t},\n\t\t\tside: {\n\t\t\t\tratio: 6,\n\t\t\t\tthreshold: -30,\n\t\t\t\trelease: 0.25,\n\t\t\t\tattack: 0.03,\n\t\t\t\tknee: 10,\n\t\t\t},\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis.mid.dispose();\n\t\tthis.side.dispose();\n\t\tthis._midSideSplit.dispose();\n\t\tthis._midSideMerge.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAGCA,aAAa,QAEP,qCAAqC;AAC5C,SAASC,UAAU,QAA2B,iBAAiB;AAC/D,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,QAAQ,QAA0B,8BAA8B;AAOzE;;;;;;AAMA,OAAM,MAAOC,iBAAkB,SAAQN,aAAuC;EA2B7EO,YAAA;IACC,MAAMC,OAAO,GAAGN,oBAAoB,CACnCI,iBAAiB,CAACG,WAAW,EAAE,EAC/BC,SAAS,CACT;IACD,KAAK,CAACF,OAAO,CAAC;IA/BN,KAAAG,IAAI,GAAW,mBAAmB;IAiC1C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,KAAK,GAAG,IAAIV,YAAY,CAAC;MAClDW,OAAO,EAAE,IAAI,CAACA;KACd,CAAC;IACF,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIZ,YAAY,CAAC;MACnDU,OAAO,EAAE,IAAI,CAACA;KACd,CAAC;IACF,IAAI,CAACG,GAAG,GAAG,IAAIhB,UAAU,CACxBiB,MAAM,CAACC,MAAM,CAACX,OAAO,CAACS,GAAG,EAAE;MAAEH,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC,CACrD;IACD,IAAI,CAACM,IAAI,GAAG,IAAInB,UAAU,CACzBiB,MAAM,CAACC,MAAM,CAACX,OAAO,CAACY,IAAI,EAAE;MAAEN,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC,CACtD;IAED,IAAI,CAACF,aAAa,CAACK,GAAG,CAACI,KAAK,CAAC,IAAI,CAACJ,GAAG,EAAE,IAAI,CAACF,aAAa,CAACE,GAAG,CAAC;IAC9D,IAAI,CAACL,aAAa,CAACQ,IAAI,CAACC,KAAK,CAAC,IAAI,CAACD,IAAI,EAAE,IAAI,CAACL,aAAa,CAACK,IAAI,CAAC;IACjEf,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;EAChC;EAEA,OAAOI,WAAWA,CAAA;IACjB,OAAOS,MAAM,CAACC,MAAM,CAACnB,aAAa,CAACS,WAAW,EAAE,EAAE;MACjDQ,GAAG,EAAE;QACJK,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,CAAC,EAAE;QACdC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;OACN;MACDN,IAAI,EAAE;QACLE,KAAK,EAAE,CAAC;QACRC,SAAS,EAAE,CAAC,EAAE;QACdC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;;KAEP,CAAC;EACH;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACV,GAAG,CAACU,OAAO,EAAE;IAClB,IAAI,CAACP,IAAI,CAACO,OAAO,EAAE;IACnB,IAAI,CAACf,aAAa,CAACe,OAAO,EAAE;IAC5B,IAAI,CAACZ,aAAa,CAACY,OAAO,EAAE;IAC5B,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}