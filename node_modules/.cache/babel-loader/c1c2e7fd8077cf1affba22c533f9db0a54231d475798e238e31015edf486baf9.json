{"ast":null,"code":"var _jsxFileName = \"/Users/king/Documents/GitHub/dtmf-dialer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as Tone from 'tone';\nimport { saveAs } from 'file-saver';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DTMF_FREQS = {\n  '1': [697, 1209],\n  '2': [697, 1336],\n  '3': [697, 1477],\n  '4': [770, 1209],\n  '5': [770, 1336],\n  '6': [770, 1477],\n  '7': [852, 1209],\n  '8': [852, 1336],\n  '9': [852, 1477],\n  '*': [941, 1209],\n  '0': [941, 1336],\n  '#': [941, 1477]\n};\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n  font-family: Arial, sans-serif;\n`;\n_c = AppContainer;\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n`;\n_c2 = Title;\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c3 = InputContainer;\nconst InputField = styled.input`\n  font-size: 2rem;\n  text-align: center;\n  padding: 10px;\n  border: 2px solid #ccc;\n  border-radius: 5px 5px 5px 5px;\n  width: 250px;\n  margin-right: 5px;\n`;\n_c4 = InputField;\nconst DeleteButton = styled.button`\n  font-size: 2rem;\n  padding: 10px;\n  background-color: #dc3545;\n  color: white;\n  border: 2px solid #ccc;\n  border-left: 2px solid #ccc;\n  border-radius: 5px 5px 5px 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #c82333;\n  }\n\n  &:active {\n    background-color: #bd2130;\n  }\n`;\n_c5 = DeleteButton;\nconst ButtonGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 80px);\n  gap: 7.5px;\n  margin-bottom: 20px;\n`;\n_c6 = ButtonGrid;\nconst Button = styled.button`\n  font-size: 1.75rem;\n  width: 70px;\n  height: 70px;\n  margin: 5px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:active {\n    background-color: #003f7f;\n  }\n`;\n_c7 = Button;\nconst ActionButton = styled.button`\n  margin-top: 20px;\n  font-size: 1.75rem;\n  padding: 10px 20px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #218838;\n  }\n\n  &:active {\n    background-color: #1e7e34;\n  }\n`;\n_c8 = ActionButton;\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const playTone = async digit => {\n    const [lowFreq, highFreq] = DTMF_FREQS[digit];\n    const lowOsc = new Tone.Oscillator(lowFreq, \"sine\").toDestination();\n    const highOsc = new Tone.Oscillator(highFreq, \"sine\").toDestination();\n    const gain = new Tone.Gain(0.5).toDestination();\n    lowOsc.connect(gain);\n    highOsc.connect(gain);\n    lowOsc.start();\n    highOsc.start();\n    setTimeout(() => {\n      lowOsc.stop();\n      highOsc.stop();\n    }, 500);\n  };\n  const handleButtonClick = digit => {\n    setInputValue(inputValue + digit);\n    playTone(digit);\n  };\n  const handleDelete = () => {\n    setInputValue(inputValue.slice(0, -1));\n  };\n  const generateAudio = () => {\n    const sampleRate = 44100;\n    const signalDuration = 0.05; // 50ms\n    const silenceDuration = 0.05; // 50ms\n    const signalSamples = Math.floor(sampleRate * signalDuration);\n    const silenceSamples = Math.floor(sampleRate * silenceDuration);\n    const totalSamples = (signalSamples + silenceSamples) * inputValue.length;\n    let audioBuffer = new Float32Array(totalSamples);\n    inputValue.split('').forEach((digit, i) => {\n      const [lowFreq, highFreq] = DTMF_FREQS[digit];\n      const tSignal = Array.from({\n        length: signalSamples\n      }, (_, j) => j / sampleRate);\n      const lowSignal = tSignal.map(t => Math.sin(2 * Math.PI * lowFreq * t));\n      const highSignal = tSignal.map(t => Math.sin(2 * Math.PI * highFreq * t));\n      const signal = lowSignal.map((val, j) => (val + highSignal[j]) * 0.5);\n      const silence = new Float32Array(silenceSamples);\n      audioBuffer.set(signal, i * (signalSamples + silenceSamples));\n      audioBuffer.set(silence, i * (signalSamples + silenceSamples) + signalSamples);\n    });\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const buffer = audioContext.createBuffer(1, audioBuffer.length, sampleRate);\n    buffer.copyToChannel(audioBuffer, 0);\n    const wav = audioBufferToWav(buffer);\n    saveAs(new Blob([wav], {\n      type: 'audio/wav'\n    }), 'dtmf.wav');\n  };\n  const audioBufferToWav = buffer => {\n    const numOfChan = buffer.numberOfChannels,\n      length = buffer.length * numOfChan * 2 + 44,\n      bufferArray = new ArrayBuffer(length),\n      view = new DataView(bufferArray),\n      channels = [],\n      sampleRate = buffer.sampleRate;\n    let offset = 0,\n      pos = 0;\n    setUint32(0x46464952); // \"RIFF\"\n    setUint32(length - 8); // file length - 8\n    setUint32(0x45564157); // \"WAVE\"\n\n    setUint32(0x20746d66); // \"fmt \" chunk\n    setUint32(16); // length = 16\n    setUint16(1); // PCM (uncompressed)\n    setUint16(numOfChan);\n    setUint32(sampleRate);\n    setUint32(sampleRate * 2 * numOfChan); // avg. bytes/sec\n    setUint16(numOfChan * 2); // block-align\n    setUint16(16); // 16-bit (hardcoded in this demo)\n\n    setUint32(0x61746164); // \"data\" - chunk\n    setUint32(length - pos - 4); // chunk length\n\n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n    while (pos < length) {\n      for (let i = 0; i < numOfChan; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n        view.setInt16(pos, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true); // convert to 16-bit PCM\n        pos += 2;\n      }\n      offset++;\n    }\n    return bufferArray;\n    function setUint16(data) {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    }\n    function setUint32(data) {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    }\n  };\n  const renderButton = digit => /*#__PURE__*/_jsxDEV(Button, {\n    onMouseDown: () => handleButtonClick(digit),\n    children: digit\n  }, digit, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"DTMF Dialer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        value: inputValue,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        onMouseDown: handleDelete,\n        children: \"Del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGrid, {\n      children: [['1', '2', '3'].map(renderButton), ['4', '5', '6'].map(renderButton), ['7', '8', '9'].map(renderButton), ['*', '0', '#'].map(renderButton)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      onClick: generateAudio,\n      children: \"Generate Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c9 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"InputContainer\");\n$RefreshReg$(_c4, \"InputField\");\n$RefreshReg$(_c5, \"DeleteButton\");\n$RefreshReg$(_c6, \"ButtonGrid\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"ActionButton\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"names":["React","useState","Tone","saveAs","styled","jsxDEV","_jsxDEV","DTMF_FREQS","AppContainer","div","_c","Title","h1","_c2","InputContainer","_c3","InputField","input","_c4","DeleteButton","button","_c5","ButtonGrid","_c6","Button","_c7","ActionButton","_c8","App","_s","inputValue","setInputValue","playTone","digit","lowFreq","highFreq","lowOsc","Oscillator","toDestination","highOsc","gain","Gain","connect","start","setTimeout","stop","handleButtonClick","handleDelete","slice","generateAudio","sampleRate","signalDuration","silenceDuration","signalSamples","Math","floor","silenceSamples","totalSamples","length","audioBuffer","Float32Array","split","forEach","i","tSignal","Array","from","_","j","lowSignal","map","t","sin","PI","highSignal","signal","val","silence","set","audioContext","window","AudioContext","webkitAudioContext","buffer","createBuffer","copyToChannel","wav","audioBufferToWav","Blob","type","numOfChan","numberOfChannels","bufferArray","ArrayBuffer","view","DataView","channels","offset","pos","setUint32","setUint16","push","getChannelData","sample","max","min","setInt16","data","renderButton","onMouseDown","children","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","onClick","_c9","$RefreshReg$"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as Tone from 'tone';\nimport { saveAs } from 'file-saver';\nimport styled from 'styled-components';\n\nconst DTMF_FREQS = {\n  '1': [697, 1209], '2': [697, 1336], '3': [697, 1477],\n  '4': [770, 1209], '5': [770, 1336], '6': [770, 1477],\n  '7': [852, 1209], '8': [852, 1336], '9': [852, 1477],\n  '*': [941, 1209], '0': [941, 1336], '#': [941, 1477]\n};\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n  font-family: Arial, sans-serif;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 20px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst InputField = styled.input`\n  font-size: 2rem;\n  text-align: center;\n  padding: 10px;\n  border: 2px solid #ccc;\n  border-radius: 5px 5px 5px 5px;\n  width: 250px;\n  margin-right: 5px;\n`;\n\nconst DeleteButton = styled.button`\n  font-size: 2rem;\n  padding: 10px;\n  background-color: #dc3545;\n  color: white;\n  border: 2px solid #ccc;\n  border-left: 2px solid #ccc;\n  border-radius: 5px 5px 5px 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #c82333;\n  }\n\n  &:active {\n    background-color: #bd2130;\n  }\n`;\n\nconst ButtonGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 80px);\n  gap: 7.5px;\n  margin-bottom: 20px;\n`;\n\nconst Button = styled.button`\n  font-size: 1.75rem;\n  width: 70px;\n  height: 70px;\n  margin: 5px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:active {\n    background-color: #003f7f;\n  }\n`;\n\nconst ActionButton = styled.button`\n  margin-top: 20px;\n  font-size: 1.75rem;\n  padding: 10px 20px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #218838;\n  }\n\n  &:active {\n    background-color: #1e7e34;\n  }\n`;\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n\n  const playTone = async (digit) => {\n    const [lowFreq, highFreq] = DTMF_FREQS[digit];\n\n    const lowOsc = new Tone.Oscillator(lowFreq, \"sine\").toDestination();\n    const highOsc = new Tone.Oscillator(highFreq, \"sine\").toDestination();\n\n    const gain = new Tone.Gain(0.5).toDestination();\n\n    lowOsc.connect(gain);\n    highOsc.connect(gain);\n\n    lowOsc.start();\n    highOsc.start();\n\n    setTimeout(() => {\n      lowOsc.stop();\n      highOsc.stop();\n    }, 500);\n  };\n\n  const handleButtonClick = (digit) => {\n    setInputValue(inputValue + digit);\n    playTone(digit);\n  };\n\n  const handleDelete = () => {\n    setInputValue(inputValue.slice(0, -1));\n  };\n\n  const generateAudio = () => {\n    const sampleRate = 44100;\n    const signalDuration = 0.05; // 50ms\n    const silenceDuration = 0.05; // 50ms\n    const signalSamples = Math.floor(sampleRate * signalDuration);\n    const silenceSamples = Math.floor(sampleRate * silenceDuration);\n    const totalSamples = (signalSamples + silenceSamples) * inputValue.length;\n    let audioBuffer = new Float32Array(totalSamples);\n\n    inputValue.split('').forEach((digit, i) => {\n      const [lowFreq, highFreq] = DTMF_FREQS[digit];\n      const tSignal = Array.from({ length: signalSamples }, (_, j) => j / sampleRate);\n      const lowSignal = tSignal.map(t => Math.sin(2 * Math.PI * lowFreq * t));\n      const highSignal = tSignal.map(t => Math.sin(2 * Math.PI * highFreq * t));\n      const signal = lowSignal.map((val, j) => (val + highSignal[j]) * 0.5);\n      const silence = new Float32Array(silenceSamples);\n\n      audioBuffer.set(signal, i * (signalSamples + silenceSamples));\n      audioBuffer.set(silence, i * (signalSamples + silenceSamples) + signalSamples);\n    });\n\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const buffer = audioContext.createBuffer(1, audioBuffer.length, sampleRate);\n    buffer.copyToChannel(audioBuffer, 0);\n\n    const wav = audioBufferToWav(buffer);\n    saveAs(new Blob([wav], { type: 'audio/wav' }), 'dtmf.wav');\n  };\n\n  const audioBufferToWav = (buffer) => {\n    const numOfChan = buffer.numberOfChannels,\n      length = buffer.length * numOfChan * 2 + 44,\n      bufferArray = new ArrayBuffer(length),\n      view = new DataView(bufferArray),\n      channels = [],\n      sampleRate = buffer.sampleRate;\n\n    let offset = 0,\n      pos = 0;\n\n    setUint32(0x46464952); // \"RIFF\"\n    setUint32(length - 8); // file length - 8\n    setUint32(0x45564157); // \"WAVE\"\n\n    setUint32(0x20746d66); // \"fmt \" chunk\n    setUint32(16); // length = 16\n    setUint16(1); // PCM (uncompressed)\n    setUint16(numOfChan);\n    setUint32(sampleRate);\n    setUint32(sampleRate * 2 * numOfChan); // avg. bytes/sec\n    setUint16(numOfChan * 2); // block-align\n    setUint16(16); // 16-bit (hardcoded in this demo)\n\n    setUint32(0x61746164); // \"data\" - chunk\n    setUint32(length - pos - 4); // chunk length\n\n    for (let i = 0; i < buffer.numberOfChannels; i++) {\n      channels.push(buffer.getChannelData(i));\n    }\n\n    while (pos < length) {\n      for (let i = 0; i < numOfChan; i++) {\n        const sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n        view.setInt16(pos, sample < 0 ? sample * 0x8000 : sample * 0x7FFF, true); // convert to 16-bit PCM\n        pos += 2;\n      }\n      offset++;\n    }\n\n    return bufferArray;\n\n    function setUint16(data) {\n      view.setUint16(pos, data, true);\n      pos += 2;\n    }\n\n    function setUint32(data) {\n      view.setUint32(pos, data, true);\n      pos += 4;\n    }\n  };\n\n  const renderButton = (digit) => (\n    <Button\n      key={digit}\n      onMouseDown={() => handleButtonClick(digit)}\n    >\n      {digit}\n    </Button>\n  );\n\n  return (\n    <AppContainer>\n      <Title>DTMF Dialer</Title>\n      <InputContainer>\n        <InputField\n          type=\"text\"\n          value={inputValue}\n          readOnly\n        />\n        <DeleteButton onMouseDown={handleDelete}>Del</DeleteButton>\n      </InputContainer>\n      <ButtonGrid>\n        {['1', '2', '3'].map(renderButton)}\n        {['4', '5', '6'].map(renderButton)}\n        {['7', '8', '9'].map(renderButton)}\n        {['*', '0', '#'].map(renderButton)}\n      </ButtonGrid>\n      <ActionButton onClick={generateAudio}>\n        Generate Audio\n      </ActionButton>\n    </AppContainer>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}