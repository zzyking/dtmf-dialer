{"ast":null,"code":"import { Gain } from \"../core/context/Gain.js\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { SignalOperator } from \"./SignalOperator.js\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n  constructor() {\n    super(optionsFromArguments(Zero.getDefaults(), arguments));\n    this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n    this._gain = new Gain({\n      context: this.context\n    });\n    /**\n     * Only outputs 0\n     */\n    this.output = this._gain;\n    /**\n     * no input node\n     */\n    this.input = undefined;\n    connect(this.context.getConstant(0), this._gain);\n  }\n  /**\n   * clean up\n   */\n  dispose() {\n    super.dispose();\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  }\n}","map":{"version":3,"names":["Gain","connect","disconnect","optionsFromArguments","SignalOperator","Zero","constructor","getDefaults","arguments","name","_gain","context","output","input","undefined","getConstant","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/signal/Zero.ts"],"sourcesContent":["import { Gain } from \"../core/context/Gain.js\";\nimport {\n\tconnect,\n\tdisconnect,\n\tToneAudioNodeOptions,\n} from \"../core/context/ToneAudioNode.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { SignalOperator } from \"./SignalOperator.js\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(Zero.getDefaults(), arguments));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,yBAAyB;AAC9C,SACCC,OAAO,EACPC,UAAU,QAEJ,kCAAkC;AACzC,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,cAAc,QAAQ,qBAAqB;AAEpD;;;;;;AAMA,OAAM,MAAOC,IAAK,SAAQD,cAAoC;EAmB7DE,YAAA;IACC,KAAK,CAACH,oBAAoB,CAACE,IAAI,CAACE,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC;IAnBlD,KAAAC,IAAI,GAAW,MAAM;IAE9B;;;IAGQ,KAAAC,KAAK,GAAG,IAAIV,IAAI,CAAC;MAAEW,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAEnD;;;IAGA,KAAAC,MAAM,GAAG,IAAI,CAACF,KAAK;IAEnB;;;IAGA,KAAAG,KAAK,GAAGC,SAAS;IAKhBb,OAAO,CAAC,IAAI,CAACU,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACL,KAAK,CAAC;EACjD;EAEA;;;EAGAM,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACfd,UAAU,CAAC,IAAI,CAACS,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACL,KAAK,CAAC;IACnD,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}