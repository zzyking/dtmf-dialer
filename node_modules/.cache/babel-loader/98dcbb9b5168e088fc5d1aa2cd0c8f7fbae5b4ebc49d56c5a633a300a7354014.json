{"ast":null,"code":"import { StereoEffect } from \"./StereoEffect.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { Scale } from \"../signal/Scale.js\";\nimport { Signal } from \"../signal/Signal.js\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter.js\";\nimport { readOnly } from \"../core/util/Interface.js\";\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four {@link FeedbackCombFilter}.\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using {@link Reverb}.\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\nexport class JCReverb extends StereoEffect {\n  constructor() {\n    const options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n    super(options);\n    this.name = \"JCReverb\";\n    /**\n     * a series of allpass filters\n     */\n    this._allpassFilters = [];\n    /**\n     * parallel feedback comb filters\n     */\n    this._feedbackCombFilters = [];\n    this.roomSize = new Signal({\n      context: this.context,\n      value: options.roomSize,\n      units: \"normalRange\"\n    });\n    this._scaleRoomSize = new Scale({\n      context: this.context,\n      min: -0.733,\n      max: 0.197\n    });\n    // make the allpass filters\n    this._allpassFilters = allpassFilterFreqs.map(freq => {\n      const allpass = this.context.createBiquadFilter();\n      allpass.type = \"allpass\";\n      allpass.frequency.value = freq;\n      return allpass;\n    });\n    // and the comb filters\n    this._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {\n      const fbcf = new FeedbackCombFilter({\n        context: this.context,\n        delayTime\n      });\n      this._scaleRoomSize.connect(fbcf.resonance);\n      fbcf.resonance.value = combFilterResonances[index];\n      if (index < combFilterDelayTimes.length / 2) {\n        this.connectEffectLeft(...this._allpassFilters, fbcf);\n      } else {\n        this.connectEffectRight(...this._allpassFilters, fbcf);\n      }\n      return fbcf;\n    });\n    // chain the allpass filters together\n    this.roomSize.connect(this._scaleRoomSize);\n    readOnly(this, [\"roomSize\"]);\n  }\n  static getDefaults() {\n    return Object.assign(StereoEffect.getDefaults(), {\n      roomSize: 0.5\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._allpassFilters.forEach(apf => apf.disconnect());\n    this._feedbackCombFilters.forEach(fbcf => fbcf.dispose());\n    this.roomSize.dispose();\n    this._scaleRoomSize.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["StereoEffect","optionsFromArguments","Scale","Signal","FeedbackCombFilter","readOnly","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","constructor","options","getDefaults","arguments","name","_allpassFilters","_feedbackCombFilters","roomSize","context","value","units","_scaleRoomSize","min","max","map","freq","allpass","createBiquadFilter","type","frequency","delayTime","index","fbcf","connect","resonance","length","connectEffectLeft","connectEffectRight","Object","assign","dispose","forEach","apf","disconnect"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/effect/JCReverb.ts"],"sourcesContent":["import { NormalRange } from \"../core/type/Units.js\";\nimport { StereoEffect, StereoEffectOptions } from \"./StereoEffect.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { Scale } from \"../signal/Scale.js\";\nimport { Signal } from \"../signal/Signal.js\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter.js\";\nimport { readOnly } from \"../core/util/Interface.js\";\n\nexport interface JCReverbOptions extends StereoEffectOptions {\n\troomSize: NormalRange;\n}\n\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [\n\t1687 / 25000,\n\t1601 / 25000,\n\t2053 / 25000,\n\t2251 / 25000,\n];\n\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four {@link FeedbackCombFilter}.\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using {@link Reverb}.\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\nexport class JCReverb extends StereoEffect<JCReverbOptions> {\n\treadonly name: string = \"JCReverb\";\n\n\t/**\n\t * Room size control values.\n\t */\n\treadonly roomSize: Signal<\"normalRange\">;\n\n\t/**\n\t * Scale the room size\n\t */\n\tprivate _scaleRoomSize: Scale;\n\n\t/**\n\t * a series of allpass filters\n\t */\n\tprivate _allpassFilters: BiquadFilterNode[] = [];\n\n\t/**\n\t * parallel feedback comb filters\n\t */\n\tprivate _feedbackCombFilters: FeedbackCombFilter[] = [];\n\n\t/**\n\t * @param roomSize Correlated to the decay time.\n\t */\n\tconstructor(roomSize?: NormalRange);\n\tconstructor(options?: Partial<JCReverbOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(\n\t\t\tJCReverb.getDefaults(),\n\t\t\targuments,\n\t\t\t[\"roomSize\"]\n\t\t);\n\t\tsuper(options);\n\n\t\tthis.roomSize = new Signal({\n\t\t\tcontext: this.context,\n\t\t\tvalue: options.roomSize,\n\t\t\tunits: \"normalRange\",\n\t\t});\n\t\tthis._scaleRoomSize = new Scale({\n\t\t\tcontext: this.context,\n\t\t\tmin: -0.733,\n\t\t\tmax: 0.197,\n\t\t});\n\n\t\t// make the allpass filters\n\t\tthis._allpassFilters = allpassFilterFreqs.map((freq) => {\n\t\t\tconst allpass = this.context.createBiquadFilter();\n\t\t\tallpass.type = \"allpass\";\n\t\t\tallpass.frequency.value = freq;\n\t\t\treturn allpass;\n\t\t});\n\n\t\t// and the comb filters\n\t\tthis._feedbackCombFilters = combFilterDelayTimes.map(\n\t\t\t(delayTime, index) => {\n\t\t\t\tconst fbcf = new FeedbackCombFilter({\n\t\t\t\t\tcontext: this.context,\n\t\t\t\t\tdelayTime,\n\t\t\t\t});\n\t\t\t\tthis._scaleRoomSize.connect(fbcf.resonance);\n\t\t\t\tfbcf.resonance.value = combFilterResonances[index];\n\t\t\t\tif (index < combFilterDelayTimes.length / 2) {\n\t\t\t\t\tthis.connectEffectLeft(...this._allpassFilters, fbcf);\n\t\t\t\t} else {\n\t\t\t\t\tthis.connectEffectRight(...this._allpassFilters, fbcf);\n\t\t\t\t}\n\t\t\t\treturn fbcf;\n\t\t\t}\n\t\t);\n\n\t\t// chain the allpass filters together\n\t\tthis.roomSize.connect(this._scaleRoomSize);\n\t\treadOnly(this, [\"roomSize\"]);\n\t}\n\n\tstatic getDefaults(): JCReverbOptions {\n\t\treturn Object.assign(StereoEffect.getDefaults(), {\n\t\t\troomSize: 0.5,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._allpassFilters.forEach((apf) => apf.disconnect());\n\t\tthis._feedbackCombFilters.forEach((fbcf) => fbcf.dispose());\n\t\tthis.roomSize.dispose();\n\t\tthis._scaleRoomSize.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}