{"ast":null,"code":"import { Panner } from \"../component/channel/Panner.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { LFOEffect } from \"./LFOEffect.js\";\n/**\n * AutoPanner is a {@link Panner} with an {@link LFO} connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect {\n  constructor() {\n    const options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n    super(options);\n    this.name = \"AutoPanner\";\n    this._panner = new Panner({\n      context: this.context,\n      channelCount: options.channelCount\n    });\n    // connections\n    this.connectEffect(this._panner);\n    this._lfo.connect(this._panner.pan);\n    this._lfo.min = -1;\n    this._lfo.max = 1;\n  }\n  static getDefaults() {\n    return Object.assign(LFOEffect.getDefaults(), {\n      channelCount: 1\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._panner.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Panner","optionsFromArguments","LFOEffect","AutoPanner","constructor","options","getDefaults","arguments","name","_panner","context","channelCount","connectEffect","_lfo","connect","pan","min","max","Object","assign","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/effect/AutoPanner.ts"],"sourcesContent":["import { Panner } from \"../component/channel/Panner.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\nimport { LFOEffect, LFOEffectOptions } from \"./LFOEffect.js\";\nimport { Frequency } from \"../core/type/Units.js\";\n\nexport interface AutoPannerOptions extends LFOEffectOptions {\n\tchannelCount: number;\n}\n\n/**\n * AutoPanner is a {@link Panner} with an {@link LFO} connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect<AutoPannerOptions> {\n\treadonly name: string = \"AutoPanner\";\n\n\t/**\n\t * The filter node\n\t */\n\treadonly _panner: Panner;\n\n\t/**\n\t * @param frequency Rate of left-right oscillation.\n\t */\n\tconstructor(frequency?: Frequency);\n\tconstructor(options?: Partial<AutoPannerOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(\n\t\t\tAutoPanner.getDefaults(),\n\t\t\targuments,\n\t\t\t[\"frequency\"]\n\t\t);\n\t\tsuper(options);\n\n\t\tthis._panner = new Panner({\n\t\t\tcontext: this.context,\n\t\t\tchannelCount: options.channelCount,\n\t\t});\n\t\t// connections\n\t\tthis.connectEffect(this._panner);\n\t\tthis._lfo.connect(this._panner.pan);\n\t\tthis._lfo.min = -1;\n\t\tthis._lfo.max = 1;\n\t}\n\n\tstatic getDefaults(): AutoPannerOptions {\n\t\treturn Object.assign(LFOEffect.getDefaults(), {\n\t\t\tchannelCount: 1,\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._panner.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gCAAgC;AACvD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,SAAS,QAA0B,gBAAgB;AAO5D;;;;;;;;;;;AAWA,OAAM,MAAOC,UAAW,SAAQD,SAA4B;EAa3DE,YAAA;IACC,MAAMC,OAAO,GAAGJ,oBAAoB,CACnCE,UAAU,CAACG,WAAW,EAAE,EACxBC,SAAS,EACT,CAAC,WAAW,CAAC,CACb;IACD,KAAK,CAACF,OAAO,CAAC;IAlBN,KAAAG,IAAI,GAAW,YAAY;IAoBnC,IAAI,CAACC,OAAO,GAAG,IAAIT,MAAM,CAAC;MACzBU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,YAAY,EAAEN,OAAO,CAACM;KACtB,CAAC;IACF;IACA,IAAI,CAACC,aAAa,CAAC,IAAI,CAACH,OAAO,CAAC;IAChC,IAAI,CAACI,IAAI,CAACC,OAAO,CAAC,IAAI,CAACL,OAAO,CAACM,GAAG,CAAC;IACnC,IAAI,CAACF,IAAI,CAACG,GAAG,GAAG,CAAC,CAAC;IAClB,IAAI,CAACH,IAAI,CAACI,GAAG,GAAG,CAAC;EAClB;EAEA,OAAOX,WAAWA,CAAA;IACjB,OAAOY,MAAM,CAACC,MAAM,CAACjB,SAAS,CAACI,WAAW,EAAE,EAAE;MAC7CK,YAAY,EAAE;KACd,CAAC;EACH;EAEAS,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACX,OAAO,CAACW,OAAO,EAAE;IACtB,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}