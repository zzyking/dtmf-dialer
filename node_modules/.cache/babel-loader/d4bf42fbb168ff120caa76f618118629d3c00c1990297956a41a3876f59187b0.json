{"ast":null,"code":"import { SignalOperator } from \"./SignalOperator.js\";\nimport { Multiply } from \"./Multiply.js\";\nimport { WaveShaper } from \"./WaveShaper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * return Tone.Offline(() => {\n * \tconst gt0 = new Tone.GreaterThanZero().toDestination();\n * \tconst sig = new Tone.Signal(0.5).connect(gt0);\n * \tsig.setValueAtTime(-1, 0.05);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThanZero extends SignalOperator {\n  constructor() {\n    super(optionsFromArguments(GreaterThanZero.getDefaults(), arguments));\n    this.name = \"GreaterThanZero\";\n    this._thresh = this.output = new WaveShaper({\n      context: this.context,\n      length: 127,\n      mapping: val => {\n        if (val <= 0) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n    this._scale = this.input = new Multiply({\n      context: this.context,\n      value: 10000\n    });\n    // connections\n    this._scale.connect(this._thresh);\n  }\n  dispose() {\n    super.dispose();\n    this._scale.dispose();\n    this._thresh.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["SignalOperator","Multiply","WaveShaper","optionsFromArguments","GreaterThanZero","constructor","getDefaults","arguments","name","_thresh","output","context","length","mapping","val","_scale","input","value","connect","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/signal/GreaterThanZero.ts"],"sourcesContent":["import { SignalOperator, SignalOperatorOptions } from \"./SignalOperator.js\";\nimport { Multiply } from \"./Multiply.js\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode.js\";\nimport { WaveShaper } from \"./WaveShaper.js\";\nimport { optionsFromArguments } from \"../core/util/Defaults.js\";\n\nexport type GreaterThanZeroOptions = SignalOperatorOptions;\n\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @example\n * return Tone.Offline(() => {\n * \tconst gt0 = new Tone.GreaterThanZero().toDestination();\n * \tconst sig = new Tone.Signal(0.5).connect(gt0);\n * \tsig.setValueAtTime(-1, 0.05);\n * }, 0.1, 1);\n * @category Signal\n */\nexport class GreaterThanZero extends SignalOperator<GreaterThanZeroOptions> {\n\treadonly name: string = \"GreaterThanZero\";\n\n\t/**\n\t * The waveshaper\n\t */\n\tprivate _thresh: WaveShaper;\n\n\t/**\n\t * Scale the first thresholded signal by a large value.\n\t * this will help with values which are very close to 0\n\t */\n\tprivate _scale: Multiply;\n\n\treadonly output: ToneAudioNode;\n\treadonly input: ToneAudioNode;\n\n\tconstructor(options?: Partial<GreaterThanZeroOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(GreaterThanZero.getDefaults(), arguments));\n\n\t\tthis._thresh = this.output = new WaveShaper({\n\t\t\tcontext: this.context,\n\t\t\tlength: 127,\n\t\t\tmapping: (val) => {\n\t\t\t\tif (val <= 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis._scale = this.input = new Multiply({\n\t\t\tcontext: this.context,\n\t\t\tvalue: 10000,\n\t\t});\n\n\t\t// connections\n\t\tthis._scale.connect(this._thresh);\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._scale.dispose();\n\t\tthis._thresh.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAA+B,qBAAqB;AAC3E,SAASC,QAAQ,QAAQ,eAAe;AAExC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,oBAAoB,QAAQ,0BAA0B;AAI/D;;;;;;;;;;AAUA,OAAM,MAAOC,eAAgB,SAAQJ,cAAsC;EAkB1EK,YAAA;IACC,KAAK,CAACF,oBAAoB,CAACC,eAAe,CAACE,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC;IAlB7D,KAAAC,IAAI,GAAW,iBAAiB;IAoBxC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIR,UAAU,CAAC;MAC3CS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAGC,GAAG,IAAI;QAChB,IAAIA,GAAG,IAAI,CAAC,EAAE;UACb,OAAO,CAAC;QACT,CAAC,MAAM;UACN,OAAO,CAAC;QACT;MACD;KACA,CAAC;IACF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,KAAK,GAAG,IAAIf,QAAQ,CAAC;MACvCU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBM,KAAK,EAAE;KACP,CAAC;IAEF;IACA,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,IAAI,CAACT,OAAO,CAAC;EAClC;EAEAU,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACJ,MAAM,CAACI,OAAO,EAAE;IACrB,IAAI,CAACV,OAAO,CAACU,OAAO,EAAE;IACtB,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}