{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter.js\";\nimport { OnePoleFilter } from \"./OnePoleFilter.js\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * {@link FeedbackCombFilter}, but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode {\n  constructor() {\n    const options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n    super(options);\n    this.name = \"LowpassCombFilter\";\n    this._combFilter = this.output = new FeedbackCombFilter({\n      context: this.context,\n      delayTime: options.delayTime,\n      resonance: options.resonance\n    });\n    this.delayTime = this._combFilter.delayTime;\n    this.resonance = this._combFilter.resonance;\n    this._lowpass = this.input = new OnePoleFilter({\n      context: this.context,\n      frequency: options.dampening,\n      type: \"lowpass\"\n    });\n    // connections\n    this._lowpass.connect(this._combFilter);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      dampening: 3000,\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  }\n  /**\n   * The dampening control of the feedback\n   */\n  get dampening() {\n    return this._lowpass.frequency;\n  }\n  set dampening(fq) {\n    this._lowpass.frequency = fq;\n  }\n  dispose() {\n    super.dispose();\n    this._combFilter.dispose();\n    this._lowpass.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","optionsFromArguments","FeedbackCombFilter","OnePoleFilter","LowpassCombFilter","constructor","options","getDefaults","arguments","name","_combFilter","output","context","delayTime","resonance","_lowpass","input","frequency","dampening","type","connect","Object","assign","fq","dispose"],"sources":["/Users/king/Documents/GitHub/dtmf-dialer/node_modules/tone/Tone/component/filter/LowpassCombFilter.ts"],"sourcesContent":["import { Param } from \"../../core/context/Param.js\";\nimport {\n\tInputNode,\n\tOutputNode,\n\tToneAudioNode,\n\tToneAudioNodeOptions,\n} from \"../../core/context/ToneAudioNode.js\";\nimport { Frequency, NormalRange, Time } from \"../../core/type/Units.js\";\nimport { optionsFromArguments } from \"../../core/util/Defaults.js\";\nimport { RecursivePartial } from \"../../core/util/Interface.js\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter.js\";\nimport { OnePoleFilter } from \"./OnePoleFilter.js\";\n\ninterface LowpassCombFilterOptions extends ToneAudioNodeOptions {\n\tdelayTime: Time;\n\tresonance: NormalRange;\n\tdampening: Frequency;\n}\n\n/**\n * A lowpass feedback comb filter. It is similar to\n * {@link FeedbackCombFilter}, but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode<LowpassCombFilterOptions> {\n\treadonly name = \"LowpassCombFilter\";\n\n\t/**\n\t * The delay node\n\t */\n\tprivate _combFilter: FeedbackCombFilter;\n\n\t/**\n\t * The lowpass filter\n\t */\n\tprivate _lowpass: OnePoleFilter;\n\n\t/**\n\t * The delayTime of the comb filter.\n\t */\n\treadonly delayTime: Param<\"time\">;\n\n\t/**\n\t * The amount of feedback of the delayed signal.\n\t */\n\treadonly resonance: Param<\"normalRange\">;\n\n\treadonly input: InputNode;\n\treadonly output: OutputNode;\n\n\t/**\n\t * @param delayTime The delay time of the comb filter\n\t * @param resonance The resonance (feedback) of the comb filter\n\t * @param dampening The cutoff of the lowpass filter dampens the signal as it is fedback.\n\t */\n\tconstructor(\n\t\tdelayTime?: Time,\n\t\tresonance?: NormalRange,\n\t\tdampening?: Frequency\n\t);\n\tconstructor(options?: RecursivePartial<LowpassCombFilterOptions>);\n\tconstructor() {\n\t\tconst options = optionsFromArguments(\n\t\t\tLowpassCombFilter.getDefaults(),\n\t\t\targuments,\n\t\t\t[\"delayTime\", \"resonance\", \"dampening\"]\n\t\t);\n\t\tsuper(options);\n\n\t\tthis._combFilter = this.output = new FeedbackCombFilter({\n\t\t\tcontext: this.context,\n\t\t\tdelayTime: options.delayTime,\n\t\t\tresonance: options.resonance,\n\t\t});\n\t\tthis.delayTime = this._combFilter.delayTime;\n\t\tthis.resonance = this._combFilter.resonance;\n\n\t\tthis._lowpass = this.input = new OnePoleFilter({\n\t\t\tcontext: this.context,\n\t\t\tfrequency: options.dampening,\n\t\t\ttype: \"lowpass\",\n\t\t});\n\n\t\t// connections\n\t\tthis._lowpass.connect(this._combFilter);\n\t}\n\n\tstatic getDefaults(): LowpassCombFilterOptions {\n\t\treturn Object.assign(ToneAudioNode.getDefaults(), {\n\t\t\tdampening: 3000,\n\t\t\tdelayTime: 0.1,\n\t\t\tresonance: 0.5,\n\t\t});\n\t}\n\n\t/**\n\t * The dampening control of the feedback\n\t */\n\tget dampening(): Frequency {\n\t\treturn this._lowpass.frequency;\n\t}\n\tset dampening(fq) {\n\t\tthis._lowpass.frequency = fq;\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._combFilter.dispose();\n\t\tthis._lowpass.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AACA,SAGCA,aAAa,QAEP,qCAAqC;AAE5C,SAASC,oBAAoB,QAAQ,6BAA6B;AAElE,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,aAAa,QAAQ,oBAAoB;AAQlD;;;;;AAKA,OAAM,MAAOC,iBAAkB,SAAQJ,aAAuC;EAqC7EK,YAAA;IACC,MAAMC,OAAO,GAAGL,oBAAoB,CACnCG,iBAAiB,CAACG,WAAW,EAAE,EAC/BC,SAAS,EACT,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CACvC;IACD,KAAK,CAACF,OAAO,CAAC;IA1CN,KAAAG,IAAI,GAAG,mBAAmB;IA4ClC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIT,kBAAkB,CAAC;MACvDU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAEP,OAAO,CAACO,SAAS;MAC5BC,SAAS,EAAER,OAAO,CAACQ;KACnB,CAAC;IACF,IAAI,CAACD,SAAS,GAAG,IAAI,CAACH,WAAW,CAACG,SAAS;IAC3C,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACI,SAAS;IAE3C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,KAAK,GAAG,IAAIb,aAAa,CAAC;MAC9CS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,SAAS,EAAEX,OAAO,CAACY,SAAS;MAC5BC,IAAI,EAAE;KACN,CAAC;IAEF;IACA,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,IAAI,CAACV,WAAW,CAAC;EACxC;EAEA,OAAOH,WAAWA,CAAA;IACjB,OAAOc,MAAM,CAACC,MAAM,CAACtB,aAAa,CAACO,WAAW,EAAE,EAAE;MACjDW,SAAS,EAAE,IAAI;MACfL,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE;KACX,CAAC;EACH;EAEA;;;EAGA,IAAII,SAASA,CAAA;IACZ,OAAO,IAAI,CAACH,QAAQ,CAACE,SAAS;EAC/B;EACA,IAAIC,SAASA,CAACK,EAAE;IACf,IAAI,CAACR,QAAQ,CAACE,SAAS,GAAGM,EAAE;EAC7B;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACd,WAAW,CAACc,OAAO,EAAE;IAC1B,IAAI,CAACT,QAAQ,CAACS,OAAO,EAAE;IACvB,OAAO,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}